diff --git a/node_modules/@react-navigation/native/.DS_Store b/node_modules/@react-navigation/native/.DS_Store
new file mode 100644
index 0000000..f9f60d0
Binary files /dev/null and b/node_modules/@react-navigation/native/.DS_Store differ
diff --git a/node_modules/@react-navigation/native/lib/.DS_Store b/node_modules/@react-navigation/native/lib/.DS_Store
new file mode 100644
index 0000000..0d00963
Binary files /dev/null and b/node_modules/@react-navigation/native/lib/.DS_Store differ
diff --git a/node_modules/@react-navigation/native/lib/module/useLinkBuilder.js.map b/node_modules/@react-navigation/native/lib/module/useLinkBuilder.js.map
index 276e6de..2b9287a 100644
--- a/node_modules/@react-navigation/native/lib/module/useLinkBuilder.js.map
+++ b/node_modules/@react-navigation/native/lib/module/useLinkBuilder.js.map
@@ -1 +1 @@
-{"version":3,"sources":["useLinkBuilder.tsx"],"names":["getPathFromState","NavigationHelpersContext","React","LinkingContext","getRootStateForNavigate","navigation","state","parent","getParent","parentState","getState","index","routes","useLinkBuilder","useContext","linking","buildLink","useCallback","name","params","options","enabled","undefined","path","config"],"mappings":"AAAA,SACEA,gBADF,EAGEC,wBAHF,QAMO,wBANP;AAOA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AAEA,OAAOC,cAAP,MAA2B,kBAA3B;;AAWA,MAAMC,uBAAuB,GAAG,CAC9BC,UAD8B,EAE9BC,KAF8B,KAGb;AACjB,QAAMC,MAAM,GAAGF,UAAU,CAACG,SAAX,EAAf;;AAEA,MAAID,MAAJ,EAAY;AACV,UAAME,WAAW,GAAGF,MAAM,CAACG,QAAP,EAApB;AAEA,WAAON,uBAAuB,CAACG,MAAD,EAAS;AACrCI,MAAAA,KAAK,EAAE,CAD8B;AAErCC,MAAAA,MAAM,EAAE,CACN,EACE,GAAGH,WAAW,CAACG,MAAZ,CAAmBH,WAAW,CAACE,KAA/B,CADL;AAEEL,QAAAA,KAAK,EAAEA;AAFT,OADM;AAF6B,KAAT,CAA9B;AASD;;AAED,SAAOA,KAAP;AACD,CArBD;AAuBA;AACA;AACA;AACA;;;AACA,eAAe,SAASO,cAAT,GAA0B;AACvC,QAAMR,UAAU,GAAGH,KAAK,CAACY,UAAN,CAAiBb,wBAAjB,CAAnB;AACA,QAAMc,OAAO,GAAGb,KAAK,CAACY,UAAN,CAAiBX,cAAjB,CAAhB;AAEA,QAAMa,SAAS,GAAGd,KAAK,CAACe,WAAN,CAChB,CAACC,IAAD,EAAeC,MAAf,KAAmC;AACjC,UAAM;AAAEC,MAAAA;AAAF,QAAcL,OAApB;;AAEA,QAAI,CAAAK,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAEC,OAAT,MAAqB,KAAzB,EAAgC;AAC9B,aAAOC,SAAP;AACD;;AAED,UAAMhB,KAAK,GAAGD,UAAU,GACpBD,uBAAuB,CAACC,UAAD,EAAa;AAClCM,MAAAA,KAAK,EAAE,CAD2B;AAElCC,MAAAA,MAAM,EAAE,CAAC;AAAEM,QAAAA,IAAF;AAAQC,QAAAA;AAAR,OAAD;AAF0B,KAAb,CADH,GAKpB;AACA;AACA;AACER,MAAAA,KAAK,EAAE,CADT;AAEEC,MAAAA,MAAM,EAAE,CAAC;AAAEM,QAAAA,IAAF;AAAQC,QAAAA;AAAR,OAAD;AAFV,KAPJ;AAYA,UAAMI,IAAI,GAAGH,OAAO,SAAP,IAAAA,OAAO,WAAP,IAAAA,OAAO,CAAEpB,gBAAT,GACToB,OAAO,CAACpB,gBAAR,CAAyBM,KAAzB,EAAgCc,OAAhC,aAAgCA,OAAhC,uBAAgCA,OAAO,CAAEI,MAAzC,CADS,GAETxB,gBAAgB,CAACM,KAAD,EAAQc,OAAR,aAAQA,OAAR,uBAAQA,OAAO,CAAEI,MAAjB,CAFpB;AAIA,WAAOD,IAAP;AACD,GAzBe,EA0BhB,CAACR,OAAD,EAAUV,UAAV,CA1BgB,CAAlB;AA6BA,SAAOW,SAAP;AACD","sourcesContent":["import {\n  getPathFromState,\n  NavigationHelpers,\n  NavigationHelpersContext,\n  NavigationProp,\n  ParamListBase,\n} from '@react-navigation/core';\nimport * as React from 'react';\n\nimport LinkingContext from './LinkingContext';\n\ntype NavigationObject =\n  | NavigationHelpers<ParamListBase>\n  | NavigationProp<ParamListBase>;\n\ntype MinimalState = {\n  index: number;\n  routes: { name: string; params?: object; state?: MinimalState }[];\n};\n\nconst getRootStateForNavigate = (\n  navigation: NavigationObject,\n  state: MinimalState\n): MinimalState => {\n  const parent = navigation.getParent();\n\n  if (parent) {\n    const parentState = parent.getState();\n\n    return getRootStateForNavigate(parent, {\n      index: 0,\n      routes: [\n        {\n          ...parentState.routes[parentState.index],\n          state: state,\n        },\n      ],\n    });\n  }\n\n  return state;\n};\n\n/**\n * Build destination link for a navigate action.\n * Useful for showing anchor tags on the web for buttons that perform navigation.\n */\nexport default function useLinkBuilder() {\n  const navigation = React.useContext(NavigationHelpersContext);\n  const linking = React.useContext(LinkingContext);\n\n  const buildLink = React.useCallback(\n    (name: string, params?: object) => {\n      const { options } = linking;\n\n      if (options?.enabled === false) {\n        return undefined;\n      }\n\n      const state = navigation\n        ? getRootStateForNavigate(navigation, {\n            index: 0,\n            routes: [{ name, params }],\n          })\n        : // If we couldn't find a navigation object in context, we're at root\n          // So we'll construct a basic state object to use\n          {\n            index: 0,\n            routes: [{ name, params }],\n          };\n\n      const path = options?.getPathFromState\n        ? options.getPathFromState(state, options?.config)\n        : getPathFromState(state, options?.config);\n\n      return path;\n    },\n    [linking, navigation]\n  );\n\n  return buildLink;\n}\n"]}
\ No newline at end of file
+{"version":3,"names":["getPathFromState","NavigationHelpersContext","React","LinkingContext","getRootStateForNavigate","navigation","state","parent","getParent","parentState","getState","index","routes","useLinkBuilder","useContext","linking","buildLink","useCallback","name","params","options","enabled","undefined","path","config"],"sourceRoot":"../../src","sources":["useLinkBuilder.tsx"],"mappings":"AAAA,SACEA,gBAAgB,EAEhBC,wBAAwB,QAGnB,wBAAwB;AAC/B,OAAO,KAAKC,KAAK,MAAM,OAAO;AAE9B,OAAOC,cAAc,MAAM,kBAAkB;AAW7C,MAAMC,uBAAuB,GAAG,CAC9BC,UAA4B,EAC5BC,KAAmB,KACF;EACjB,MAAMC,MAAM,GAAGF,UAAU,CAACG,SAAS,EAAE;EAErC,IAAID,MAAM,EAAE;IACV,MAAME,WAAW,GAAGF,MAAM,CAACG,QAAQ,EAAE;IAErC,OAAON,uBAAuB,CAACG,MAAM,EAAE;MACrCI,KAAK,EAAE,CAAC;MACRC,MAAM,EAAE,CACN;QACE,GAAGH,WAAW,CAACG,MAAM,CAACH,WAAW,CAACE,KAAK,CAAC;QACxCL,KAAK,EAAEA;MACT,CAAC;IAEL,CAAC,CAAC;EACJ;EAEA,OAAOA,KAAK;AACd,CAAC;;AAED;AACA;AACA;AACA;AACA,eAAe,SAASO,cAAc,GAAG;EACvC,MAAMR,UAAU,GAAGH,KAAK,CAACY,UAAU,CAACb,wBAAwB,CAAC;EAC7D,MAAMc,OAAO,GAAGb,KAAK,CAACY,UAAU,CAACX,cAAc,CAAC;EAEhD,MAAMa,SAAS,GAAGd,KAAK,CAACe,WAAW,CACjC,CAACC,IAAY,EAAEC,MAAe,KAAK;IACjC,MAAM;MAAEC;IAAQ,CAAC,GAAGL,OAAO;IAE3B,IAAI,CAAAK,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEC,OAAO,MAAK,KAAK,EAAE;MAC9B,OAAOC,SAAS;IAClB;IAEA,MAAMhB,KAAK,GAAGD,UAAU,GACpBD,uBAAuB,CAACC,UAAU,EAAE;MAClCM,KAAK,EAAE,CAAC;MACRC,MAAM,EAAE,CAAC;QAAEM,IAAI;QAAEC;MAAO,CAAC;IAC3B,CAAC,CAAC;IACF;IACA;IACA;MACER,KAAK,EAAE,CAAC;MACRC,MAAM,EAAE,CAAC;QAAEM,IAAI;QAAEC;MAAO,CAAC;IAC3B,CAAC;IAEL,MAAMI,IAAI,GAAGH,OAAO,aAAPA,OAAO,eAAPA,OAAO,CAAEpB,gBAAgB,GAClCoB,OAAO,CAACpB,gBAAgB,CAACM,KAAK,EAAEc,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEI,MAAM,CAAC,GAChDxB,gBAAgB,CAACM,KAAK,EAAEc,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEI,MAAM,CAAC;IAE5C,OAAOD,IAAI;EACb,CAAC,EACD,CAACR,OAAO,EAAEV,UAAU,CAAC,CACtB;EAED,OAAOW,SAAS;AAClB"}
\ No newline at end of file
diff --git a/node_modules/@react-navigation/native/lib/module/useLinking.js b/node_modules/@react-navigation/native/lib/module/useLinking.js
index ee1a4a5..d536928 100644
--- a/node_modules/@react-navigation/native/lib/module/useLinking.js
+++ b/node_modules/@react-navigation/native/lib/module/useLinking.js
@@ -3,6 +3,18 @@ import isEqual from 'fast-deep-equal';
 import * as React from 'react';
 import createMemoryHistory from './createMemoryHistory';
 import ServerContext from './ServerContext';
+const keysBlocklist = ['key', 'stale', 'routeNames'];
+const stripNavigationState = state => {
+  const rawState = Array.isArray(state) ? [] : {};
+  for (const key of Object.keys(state)) {
+    if (keysBlocklist.includes(key)) {
+      continue;
+    }
+    // @ts-ignore
+    rawState[key] = typeof state[key] === 'object' ? stripNavigationState(state[key]) : state[key];
+  }
+  return rawState;
+};
 
 /**
  * Find the matching navigation state that changed between 2 navigation states
@@ -11,36 +23,34 @@ import ServerContext from './ServerContext';
 const findMatchingState = (a, b) => {
   if (a === undefined || b === undefined || a.key !== b.key) {
     return [undefined, undefined];
-  } // Tab and drawer will have `history` property, but stack will have history in `routes`
-
+  }
 
+  // Tab and drawer will have `history` property, but stack will have history in `routes`
   const aHistoryLength = a.history ? a.history.length : a.routes.length;
   const bHistoryLength = b.history ? b.history.length : b.routes.length;
   const aRoute = a.routes[a.index];
   const bRoute = b.routes[b.index];
   const aChildState = aRoute.state;
-  const bChildState = bRoute.state; // Stop here if this is the state object that changed:
+  const bChildState = bRoute.state;
+
+  // Stop here if this is the state object that changed:
   // - history length is different
   // - focused routes are different
   // - one of them doesn't have child state
   // - child state keys are different
-
   if (aHistoryLength !== bHistoryLength || aRoute.key !== bRoute.key || aChildState === undefined || bChildState === undefined || aChildState.key !== bChildState.key) {
     return [a, b];
   }
-
   return findMatchingState(aChildState, bChildState);
 };
+
 /**
  * Run async function in series as it's called.
  */
-
-
 const series = cb => {
   // Whether we're currently handling a callback
   let handling = false;
   let queue = [];
-
   const callback = async () => {
     try {
       if (handling) {
@@ -49,12 +59,10 @@ const series = cb => {
         queue.unshift(callback);
         return;
       }
-
       handling = true;
       await cb();
     } finally {
       handling = false;
-
       if (queue.length) {
         // If we have queued items, handle the last one
         const last = queue.pop();
@@ -62,10 +70,8 @@ const series = cb => {
       }
     }
   };
-
   return callback;
 };
-
 let linkingHandlers = [];
 export default function useLinking(ref, _ref) {
   let {
@@ -80,33 +86,28 @@ export default function useLinking(ref, _ref) {
     if (process.env.NODE_ENV === 'production') {
       return undefined;
     }
-
     if (independent) {
       return undefined;
     }
-
     if (enabled !== false && linkingHandlers.length) {
       console.error(['Looks like you have configured linking in multiple places. This is likely an error since deep links should only be handled in one place to avoid conflicts. Make sure that:', "- You don't have multiple NavigationContainers in the app each with 'linking' enabled", '- Only a single instance of the root component is rendered'].join('\n').trim());
     }
-
     const handler = Symbol();
-
     if (enabled !== false) {
       linkingHandlers.push(handler);
     }
-
     return () => {
       const index = linkingHandlers.indexOf(handler);
-
       if (index > -1) {
         linkingHandlers.splice(index, 1);
       }
     };
   }, [enabled, independent]);
-  const [history] = React.useState(createMemoryHistory); // We store these options in ref to avoid re-creating getInitialState and re-subscribing listeners
+  const [history] = React.useState(createMemoryHistory);
+
+  // We store these options in ref to avoid re-creating getInitialState and re-subscribing listeners
   // This lets user avoid wrapping the items in `React.useCallback` or `React.useMemo`
   // Not re-creating `getInitialState` is important coz it makes it easier for the user to use in an effect
-
   const enabledRef = React.useRef(enabled);
   const configRef = React.useRef(config);
   const getStateFromPathRef = React.useRef(getStateFromPath);
@@ -122,29 +123,23 @@ export default function useLinking(ref, _ref) {
   const server = React.useContext(ServerContext);
   const getInitialState = React.useCallback(() => {
     let value;
-
     if (enabledRef.current) {
-      var _server$location;
-
-      const location = (_server$location = server === null || server === void 0 ? void 0 : server.location) !== null && _server$location !== void 0 ? _server$location : typeof window !== 'undefined' ? window.location : undefined;
+      const location = (server === null || server === void 0 ? void 0 : server.location) ?? (typeof window !== 'undefined' ? window.location : undefined);
       const path = location ? location.pathname + location.search : undefined;
-
       if (path) {
         value = getStateFromPathRef.current(path, configRef.current);
       }
     }
-
     const thenable = {
       then(onfulfilled) {
         return Promise.resolve(onfulfilled ? onfulfilled(value) : value);
       },
-
       catch() {
         return thenable;
       }
-
     };
-    return thenable; // eslint-disable-next-line react-hooks/exhaustive-deps
+    return thenable;
+    // eslint-disable-next-line react-hooks/exhaustive-deps
   }, []);
   const previousIndexRef = React.useRef(undefined);
   const previousStateRef = React.useRef(undefined);
@@ -152,52 +147,47 @@ export default function useLinking(ref, _ref) {
   React.useEffect(() => {
     previousIndexRef.current = history.index;
     return history.listen(() => {
-      var _previousIndexRef$cur;
-
       const navigation = ref.current;
-
       if (!navigation || !enabled) {
         return;
       }
-
       const path = location.pathname + location.search;
       const index = history.index;
-      const previousIndex = (_previousIndexRef$cur = previousIndexRef.current) !== null && _previousIndexRef$cur !== void 0 ? _previousIndexRef$cur : 0;
+      const previousIndex = previousIndexRef.current ?? 0;
       previousIndexRef.current = index;
-      pendingPopStatePathRef.current = path; // When browser back/forward is clicked, we first need to check if state object for this index exists
+      pendingPopStatePathRef.current = path;
+
+      // When browser back/forward is clicked, we first need to check if state object for this index exists
       // If it does we'll reset to that state object
       // Otherwise, we'll handle it like a regular deep link
-
       const record = history.get(index);
-
       if ((record === null || record === void 0 ? void 0 : record.path) === path && record !== null && record !== void 0 && record.state) {
-        navigation.resetRoot(record.state);
+        const strippedState = stripNavigationState(record.state);
+        navigation.resetRoot(strippedState);
         return;
       }
+      const state = getStateFromPathRef.current(path, configRef.current);
 
-      const state = getStateFromPathRef.current(path, configRef.current); // We should only dispatch an action when going forward
+      // We should only dispatch an action when going forward
       // Otherwise the action will likely add items to history, which would mess things up
-
       if (state) {
         // Make sure that the routes in the state exist in the root navigator
         // Otherwise there's an error in the linking configuration
         const rootState = navigation.getRootState();
-
         if (state.routes.some(r => !(rootState !== null && rootState !== void 0 && rootState.routeNames.includes(r.name)))) {
           console.warn("The navigation state parsed from the URL contains routes not present in the root navigator. This usually means that the linking configuration doesn't match the navigation structure. See https://reactnavigation.org/docs/configuring-links for more details on how to specify a linking configuration.");
           return;
         }
-
         if (index > previousIndex) {
           const action = getActionFromStateRef.current(state, configRef.current);
-
           if (action !== undefined) {
             try {
               navigation.dispatch(action);
             } catch (e) {
               // Ignore any errors from deep linking.
               // This could happen in case of malformed links, navigation object not being initialized etc.
-              console.warn(`An error occurred when trying to handle the link '${path}': ${typeof e === 'object' && e != null && 'message' in e ? // @ts-expect-error: we're already checking for this
+              console.warn(`An error occurred when trying to handle the link '${path}': ${typeof e === 'object' && e != null && 'message' in e ?
+              // @ts-expect-error: we're already checking for this
               e.message : e}`);
             }
           } else {
@@ -214,79 +204,67 @@ export default function useLinking(ref, _ref) {
   }, [enabled, history, ref]);
   React.useEffect(() => {
     var _ref$current;
-
     if (!enabled) {
       return;
     }
-
     const getPathForRoute = (route, state) => {
       // If the `route` object contains a `path`, use that path as long as `route.name` and `params` still match
       // This makes sure that we preserve the original URL for wildcard routes
       if (route !== null && route !== void 0 && route.path) {
         const stateForPath = getStateFromPathRef.current(route.path, configRef.current);
-
         if (stateForPath) {
           const focusedRoute = findFocusedRoute(stateForPath);
-
           if (focusedRoute && focusedRoute.name === route.name && isEqual(focusedRoute.params, route.params)) {
             return route.path;
           }
         }
       }
-
       return getPathFromStateRef.current(state, configRef.current);
     };
-
     if (ref.current) {
       // We need to record the current metadata on the first render if they aren't set
       // This will allow the initial state to be in the history entry
       const state = ref.current.getRootState();
-
       if (state) {
         const route = findFocusedRoute(state);
         const path = getPathForRoute(route, state);
-
         if (previousStateRef.current === undefined) {
           previousStateRef.current = state;
         }
-
         history.replace({
           path,
           state
         });
       }
     }
-
     const onStateChange = async () => {
       const navigation = ref.current;
-
       if (!navigation || !enabled) {
         return;
       }
-
       const previousState = previousStateRef.current;
-      const state = navigation.getRootState(); // root state may not available, for example when root navigators switch inside the container
+      const state = navigation.getRootState();
 
+      // root state may not available, for example when root navigators switch inside the container
       if (!state) {
         return;
       }
-
       const pendingPath = pendingPopStatePathRef.current;
       const route = findFocusedRoute(state);
       const path = getPathForRoute(route, state);
       previousStateRef.current = state;
-      pendingPopStatePathRef.current = undefined; // To detect the kind of state change, we need to:
+      pendingPopStatePathRef.current = undefined;
+
+      // To detect the kind of state change, we need to:
       // - Find the common focused navigation state in previous and current state
       // - If only the route keys changed, compare history/routes.length to check if we go back/forward/replace
       // - If no common focused navigation state found, it's a replace
-
       const [previousFocusedState, focusedState] = findMatchingState(previousState, state);
-
-      if (previousFocusedState && focusedState && // We should only handle push/pop if path changed from what was in last `popstate`
+      if (previousFocusedState && focusedState &&
+      // We should only handle push/pop if path changed from what was in last `popstate`
       // Otherwise it's likely a change triggered by `popstate`
       path !== pendingPath) {
         const historyDelta = (focusedState.history ? focusedState.history.length : focusedState.routes.length) - (previousFocusedState.history ? previousFocusedState.history.length : previousFocusedState.routes.length);
-
         if (historyDelta > 0) {
           // If history length is increased, we should pushState
           // Note that path might not actually change here, for example, drawer open should pushState
@@ -296,11 +274,11 @@ export default function useLinking(ref, _ref) {
           });
         } else if (historyDelta < 0) {
           // If history length is decreased, i.e. entries were removed, we want to go back
+
           const nextIndex = history.backIndex({
             path
           });
           const currentIndex = history.index;
-
           try {
             if (nextIndex !== -1 && nextIndex < currentIndex) {
               // An existing entry for this path exists and it's less than current index, go back to that
@@ -310,14 +288,15 @@ export default function useLinking(ref, _ref) {
               // This won't be correct if multiple routes were pushed in one go before
               // Usually this shouldn't happen and this is a fallback for that
               await history.go(historyDelta);
-            } // Store the updated state as well as fix the path if incorrect
-
+            }
 
+            // Store the updated state as well as fix the path if incorrect
             history.replace({
               path,
               state
             });
-          } catch (e) {// The navigation was interrupted
+          } catch (e) {
+            // The navigation was interrupted
           }
         } else {
           // If history length is unchanged, we want to replaceState
@@ -334,11 +313,11 @@ export default function useLinking(ref, _ref) {
           state
         });
       }
-    }; // We debounce onStateChange coz we don't want multiple state changes to be handled at one time
+    };
+
+    // We debounce onStateChange coz we don't want multiple state changes to be handled at one time
     // This could happen since `history.go(n)` is asynchronous
     // If `pushState` or `replaceState` were called before `history.go(n)` completes, it'll mess stuff up
-
-
     return (_ref$current = ref.current) === null || _ref$current === void 0 ? void 0 : _ref$current.addListener('state', series(onStateChange));
   });
   return {
diff --git a/node_modules/@react-navigation/native/lib/module/useLinking.js.map b/node_modules/@react-navigation/native/lib/module/useLinking.js.map
index 6a1deb9..f49c6cd 100644
--- a/node_modules/@react-navigation/native/lib/module/useLinking.js.map
+++ b/node_modules/@react-navigation/native/lib/module/useLinking.js.map
@@ -1 +1 @@
-{"version":3,"sources":["useLinking.tsx"],"names":["findFocusedRoute","getActionFromState","getActionFromStateDefault","getPathFromState","getPathFromStateDefault","getStateFromPath","getStateFromPathDefault","isEqual","React","createMemoryHistory","ServerContext","findMatchingState","a","b","undefined","key","aHistoryLength","history","length","routes","bHistoryLength","aRoute","index","bRoute","aChildState","state","bChildState","series","cb","handling","queue","callback","unshift","last","pop","linkingHandlers","useLinking","ref","independent","enabled","config","useEffect","process","env","NODE_ENV","console","error","join","trim","handler","Symbol","push","indexOf","splice","useState","enabledRef","useRef","configRef","getStateFromPathRef","getPathFromStateRef","getActionFromStateRef","current","server","useContext","getInitialState","useCallback","value","location","window","path","pathname","search","thenable","then","onfulfilled","Promise","resolve","catch","previousIndexRef","previousStateRef","pendingPopStatePathRef","listen","navigation","previousIndex","record","get","resetRoot","rootState","getRootState","some","r","routeNames","includes","name","warn","action","dispatch","e","message","getPathForRoute","route","stateForPath","focusedRoute","params","replace","onStateChange","previousState","pendingPath","previousFocusedState","focusedState","historyDelta","nextIndex","backIndex","currentIndex","go","addListener"],"mappings":"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","sourcesContent":["import {\n  findFocusedRoute,\n  getActionFromState as getActionFromStateDefault,\n  getPathFromState as getPathFromStateDefault,\n  getStateFromPath as getStateFromPathDefault,\n  NavigationContainerRef,\n  NavigationState,\n  ParamListBase,\n} from '@react-navigation/core';\nimport isEqual from 'fast-deep-equal';\nimport * as React from 'react';\n\nimport createMemoryHistory from './createMemoryHistory';\nimport ServerContext from './ServerContext';\nimport type { LinkingOptions } from './types';\n\ntype ResultState = ReturnType<typeof getStateFromPathDefault>;\n\n/**\n * Find the matching navigation state that changed between 2 navigation states\n * e.g.: a -> b -> c -> d and a -> b -> c -> e -> f, if history in b changed, b is the matching state\n */\nconst findMatchingState = <T extends NavigationState>(\n  a: T | undefined,\n  b: T | undefined\n): [T | undefined, T | undefined] => {\n  if (a === undefined || b === undefined || a.key !== b.key) {\n    return [undefined, undefined];\n  }\n\n  // Tab and drawer will have `history` property, but stack will have history in `routes`\n  const aHistoryLength = a.history ? a.history.length : a.routes.length;\n  const bHistoryLength = b.history ? b.history.length : b.routes.length;\n\n  const aRoute = a.routes[a.index];\n  const bRoute = b.routes[b.index];\n\n  const aChildState = aRoute.state as T | undefined;\n  const bChildState = bRoute.state as T | undefined;\n\n  // Stop here if this is the state object that changed:\n  // - history length is different\n  // - focused routes are different\n  // - one of them doesn't have child state\n  // - child state keys are different\n  if (\n    aHistoryLength !== bHistoryLength ||\n    aRoute.key !== bRoute.key ||\n    aChildState === undefined ||\n    bChildState === undefined ||\n    aChildState.key !== bChildState.key\n  ) {\n    return [a, b];\n  }\n\n  return findMatchingState(aChildState, bChildState);\n};\n\n/**\n * Run async function in series as it's called.\n */\nconst series = (cb: () => Promise<void>) => {\n  // Whether we're currently handling a callback\n  let handling = false;\n  let queue: (() => Promise<void>)[] = [];\n\n  const callback = async () => {\n    try {\n      if (handling) {\n        // If we're currently handling a previous event, wait before handling this one\n        // Add the callback to the beginning of the queue\n        queue.unshift(callback);\n        return;\n      }\n\n      handling = true;\n\n      await cb();\n    } finally {\n      handling = false;\n\n      if (queue.length) {\n        // If we have queued items, handle the last one\n        const last = queue.pop();\n\n        last?.();\n      }\n    }\n  };\n\n  return callback;\n};\n\nlet linkingHandlers: Symbol[] = [];\n\ntype Options = LinkingOptions<ParamListBase> & {\n  independent?: boolean;\n};\n\nexport default function useLinking(\n  ref: React.RefObject<NavigationContainerRef<ParamListBase>>,\n  {\n    independent,\n    enabled = true,\n    config,\n    getStateFromPath = getStateFromPathDefault,\n    getPathFromState = getPathFromStateDefault,\n    getActionFromState = getActionFromStateDefault,\n  }: Options\n) {\n  React.useEffect(() => {\n    if (process.env.NODE_ENV === 'production') {\n      return undefined;\n    }\n\n    if (independent) {\n      return undefined;\n    }\n\n    if (enabled !== false && linkingHandlers.length) {\n      console.error(\n        [\n          'Looks like you have configured linking in multiple places. This is likely an error since deep links should only be handled in one place to avoid conflicts. Make sure that:',\n          \"- You don't have multiple NavigationContainers in the app each with 'linking' enabled\",\n          '- Only a single instance of the root component is rendered',\n        ]\n          .join('\\n')\n          .trim()\n      );\n    }\n\n    const handler = Symbol();\n\n    if (enabled !== false) {\n      linkingHandlers.push(handler);\n    }\n\n    return () => {\n      const index = linkingHandlers.indexOf(handler);\n\n      if (index > -1) {\n        linkingHandlers.splice(index, 1);\n      }\n    };\n  }, [enabled, independent]);\n\n  const [history] = React.useState(createMemoryHistory);\n\n  // We store these options in ref to avoid re-creating getInitialState and re-subscribing listeners\n  // This lets user avoid wrapping the items in `React.useCallback` or `React.useMemo`\n  // Not re-creating `getInitialState` is important coz it makes it easier for the user to use in an effect\n  const enabledRef = React.useRef(enabled);\n  const configRef = React.useRef(config);\n  const getStateFromPathRef = React.useRef(getStateFromPath);\n  const getPathFromStateRef = React.useRef(getPathFromState);\n  const getActionFromStateRef = React.useRef(getActionFromState);\n\n  React.useEffect(() => {\n    enabledRef.current = enabled;\n    configRef.current = config;\n    getStateFromPathRef.current = getStateFromPath;\n    getPathFromStateRef.current = getPathFromState;\n    getActionFromStateRef.current = getActionFromState;\n  });\n\n  const server = React.useContext(ServerContext);\n\n  const getInitialState = React.useCallback(() => {\n    let value: ResultState | undefined;\n\n    if (enabledRef.current) {\n      const location =\n        server?.location ??\n        (typeof window !== 'undefined' ? window.location : undefined);\n\n      const path = location ? location.pathname + location.search : undefined;\n\n      if (path) {\n        value = getStateFromPathRef.current(path, configRef.current);\n      }\n    }\n\n    const thenable = {\n      then(onfulfilled?: (state: ResultState | undefined) => void) {\n        return Promise.resolve(onfulfilled ? onfulfilled(value) : value);\n      },\n      catch() {\n        return thenable;\n      },\n    };\n\n    return thenable as PromiseLike<ResultState | undefined>;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const previousIndexRef = React.useRef<number | undefined>(undefined);\n  const previousStateRef = React.useRef<NavigationState | undefined>(undefined);\n  const pendingPopStatePathRef = React.useRef<string | undefined>(undefined);\n\n  React.useEffect(() => {\n    previousIndexRef.current = history.index;\n\n    return history.listen(() => {\n      const navigation = ref.current;\n\n      if (!navigation || !enabled) {\n        return;\n      }\n\n      const path = location.pathname + location.search;\n      const index = history.index;\n\n      const previousIndex = previousIndexRef.current ?? 0;\n\n      previousIndexRef.current = index;\n      pendingPopStatePathRef.current = path;\n\n      // When browser back/forward is clicked, we first need to check if state object for this index exists\n      // If it does we'll reset to that state object\n      // Otherwise, we'll handle it like a regular deep link\n      const record = history.get(index);\n\n      if (record?.path === path && record?.state) {\n        navigation.resetRoot(record.state);\n        return;\n      }\n\n      const state = getStateFromPathRef.current(path, configRef.current);\n\n      // We should only dispatch an action when going forward\n      // Otherwise the action will likely add items to history, which would mess things up\n      if (state) {\n        // Make sure that the routes in the state exist in the root navigator\n        // Otherwise there's an error in the linking configuration\n        const rootState = navigation.getRootState();\n\n        if (state.routes.some((r) => !rootState?.routeNames.includes(r.name))) {\n          console.warn(\n            \"The navigation state parsed from the URL contains routes not present in the root navigator. This usually means that the linking configuration doesn't match the navigation structure. See https://reactnavigation.org/docs/configuring-links for more details on how to specify a linking configuration.\"\n          );\n          return;\n        }\n\n        if (index > previousIndex) {\n          const action = getActionFromStateRef.current(\n            state,\n            configRef.current\n          );\n\n          if (action !== undefined) {\n            try {\n              navigation.dispatch(action);\n            } catch (e) {\n              // Ignore any errors from deep linking.\n              // This could happen in case of malformed links, navigation object not being initialized etc.\n              console.warn(\n                `An error occurred when trying to handle the link '${path}': ${\n                  typeof e === 'object' && e != null && 'message' in e\n                    ? // @ts-expect-error: we're already checking for this\n                      e.message\n                    : e\n                }`\n              );\n            }\n          } else {\n            navigation.resetRoot(state);\n          }\n        } else {\n          navigation.resetRoot(state);\n        }\n      } else {\n        // if current path didn't return any state, we should revert to initial state\n        navigation.resetRoot(state);\n      }\n    });\n  }, [enabled, history, ref]);\n\n  React.useEffect(() => {\n    if (!enabled) {\n      return;\n    }\n\n    const getPathForRoute = (\n      route: ReturnType<typeof findFocusedRoute>,\n      state: NavigationState\n    ): string => {\n      // If the `route` object contains a `path`, use that path as long as `route.name` and `params` still match\n      // This makes sure that we preserve the original URL for wildcard routes\n      if (route?.path) {\n        const stateForPath = getStateFromPathRef.current(\n          route.path,\n          configRef.current\n        );\n\n        if (stateForPath) {\n          const focusedRoute = findFocusedRoute(stateForPath);\n\n          if (\n            focusedRoute &&\n            focusedRoute.name === route.name &&\n            isEqual(focusedRoute.params, route.params)\n          ) {\n            return route.path;\n          }\n        }\n      }\n\n      return getPathFromStateRef.current(state, configRef.current);\n    };\n\n    if (ref.current) {\n      // We need to record the current metadata on the first render if they aren't set\n      // This will allow the initial state to be in the history entry\n      const state = ref.current.getRootState();\n\n      if (state) {\n        const route = findFocusedRoute(state);\n        const path = getPathForRoute(route, state);\n\n        if (previousStateRef.current === undefined) {\n          previousStateRef.current = state;\n        }\n\n        history.replace({ path, state });\n      }\n    }\n\n    const onStateChange = async () => {\n      const navigation = ref.current;\n\n      if (!navigation || !enabled) {\n        return;\n      }\n\n      const previousState = previousStateRef.current;\n      const state = navigation.getRootState();\n\n      // root state may not available, for example when root navigators switch inside the container\n      if (!state) {\n        return;\n      }\n\n      const pendingPath = pendingPopStatePathRef.current;\n      const route = findFocusedRoute(state);\n      const path = getPathForRoute(route, state);\n\n      previousStateRef.current = state;\n      pendingPopStatePathRef.current = undefined;\n\n      // To detect the kind of state change, we need to:\n      // - Find the common focused navigation state in previous and current state\n      // - If only the route keys changed, compare history/routes.length to check if we go back/forward/replace\n      // - If no common focused navigation state found, it's a replace\n      const [previousFocusedState, focusedState] = findMatchingState(\n        previousState,\n        state\n      );\n\n      if (\n        previousFocusedState &&\n        focusedState &&\n        // We should only handle push/pop if path changed from what was in last `popstate`\n        // Otherwise it's likely a change triggered by `popstate`\n        path !== pendingPath\n      ) {\n        const historyDelta =\n          (focusedState.history\n            ? focusedState.history.length\n            : focusedState.routes.length) -\n          (previousFocusedState.history\n            ? previousFocusedState.history.length\n            : previousFocusedState.routes.length);\n\n        if (historyDelta > 0) {\n          // If history length is increased, we should pushState\n          // Note that path might not actually change here, for example, drawer open should pushState\n          history.push({ path, state });\n        } else if (historyDelta < 0) {\n          // If history length is decreased, i.e. entries were removed, we want to go back\n\n          const nextIndex = history.backIndex({ path });\n          const currentIndex = history.index;\n\n          try {\n            if (nextIndex !== -1 && nextIndex < currentIndex) {\n              // An existing entry for this path exists and it's less than current index, go back to that\n              await history.go(nextIndex - currentIndex);\n            } else {\n              // We couldn't find an existing entry to go back to, so we'll go back by the delta\n              // This won't be correct if multiple routes were pushed in one go before\n              // Usually this shouldn't happen and this is a fallback for that\n              await history.go(historyDelta);\n            }\n\n            // Store the updated state as well as fix the path if incorrect\n            history.replace({ path, state });\n          } catch (e) {\n            // The navigation was interrupted\n          }\n        } else {\n          // If history length is unchanged, we want to replaceState\n          history.replace({ path, state });\n        }\n      } else {\n        // If no common navigation state was found, assume it's a replace\n        // This would happen if the user did a reset/conditionally changed navigators\n        history.replace({ path, state });\n      }\n    };\n\n    // We debounce onStateChange coz we don't want multiple state changes to be handled at one time\n    // This could happen since `history.go(n)` is asynchronous\n    // If `pushState` or `replaceState` were called before `history.go(n)` completes, it'll mess stuff up\n    return ref.current?.addListener('state', series(onStateChange));\n  });\n\n  return {\n    getInitialState,\n  };\n}\n"]}
\ No newline at end of file
+{"version":3,"names":["findFocusedRoute","getActionFromState","getActionFromStateDefault","getPathFromState","getPathFromStateDefault","getStateFromPath","getStateFromPathDefault","isEqual","React","createMemoryHistory","ServerContext","keysBlocklist","stripNavigationState","state","rawState","Array","isArray","key","Object","keys","includes","findMatchingState","a","b","undefined","aHistoryLength","history","length","routes","bHistoryLength","aRoute","index","bRoute","aChildState","bChildState","series","cb","handling","queue","callback","unshift","last","pop","linkingHandlers","useLinking","ref","independent","enabled","config","useEffect","process","env","NODE_ENV","console","error","join","trim","handler","Symbol","push","indexOf","splice","useState","enabledRef","useRef","configRef","getStateFromPathRef","getPathFromStateRef","getActionFromStateRef","current","server","useContext","getInitialState","useCallback","value","location","window","path","pathname","search","thenable","then","onfulfilled","Promise","resolve","catch","previousIndexRef","previousStateRef","pendingPopStatePathRef","listen","navigation","previousIndex","record","get","strippedState","resetRoot","rootState","getRootState","some","r","routeNames","name","warn","action","dispatch","e","message","getPathForRoute","route","stateForPath","focusedRoute","params","replace","onStateChange","previousState","pendingPath","previousFocusedState","focusedState","historyDelta","nextIndex","backIndex","currentIndex","go","addListener"],"sourceRoot":"../../src","sources":["useLinking.tsx"],"mappings":"AAAA,SACEA,gBAAgB,EAChBC,kBAAkB,IAAIC,yBAAyB,EAC/CC,gBAAgB,IAAIC,uBAAuB,EAC3CC,gBAAgB,IAAIC,uBAAuB,QAItC,wBAAwB;AAC/B,OAAOC,OAAO,MAAM,iBAAiB;AACrC,OAAO,KAAKC,KAAK,MAAM,OAAO;AAE9B,OAAOC,mBAAmB,MAAM,uBAAuB;AACvD,OAAOC,aAAa,MAAM,iBAAiB;AAK3C,MAAMC,aAAa,GAAG,CAAC,KAAK,EAAE,OAAO,EAAE,YAAY,CAAC;AAEpD,MAAMC,oBAAoB,GAAIC,KAAU,IAAK;EAC3C,MAAMC,QAAQ,GAAGC,KAAK,CAACC,OAAO,CAACH,KAAK,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;EAC/C,KAAK,MAAMI,GAAG,IAAIC,MAAM,CAACC,IAAI,CAACN,KAAK,CAAC,EAAE;IACpC,IAAIF,aAAa,CAACS,QAAQ,CAACH,GAAG,CAAC,EAAE;MAC/B;IACF;IACA;IACAH,QAAQ,CAACG,GAAG,CAAC,GACX,OAAOJ,KAAK,CAACI,GAAG,CAAC,KAAK,QAAQ,GAC1BL,oBAAoB,CAACC,KAAK,CAACI,GAAG,CAAC,CAAC,GAChCJ,KAAK,CAACI,GAAG,CAAC;EAClB;EACA,OAAOH,QAAQ;AACjB,CAAC;;AAED;AACA;AACA;AACA;AACA,MAAMO,iBAAiB,GAAG,CACxBC,CAAgB,EAChBC,CAAgB,KACmB;EACnC,IAAID,CAAC,KAAKE,SAAS,IAAID,CAAC,KAAKC,SAAS,IAAIF,CAAC,CAACL,GAAG,KAAKM,CAAC,CAACN,GAAG,EAAE;IACzD,OAAO,CAACO,SAAS,EAAEA,SAAS,CAAC;EAC/B;;EAEA;EACA,MAAMC,cAAc,GAAGH,CAAC,CAACI,OAAO,GAAGJ,CAAC,CAACI,OAAO,CAACC,MAAM,GAAGL,CAAC,CAACM,MAAM,CAACD,MAAM;EACrE,MAAME,cAAc,GAAGN,CAAC,CAACG,OAAO,GAAGH,CAAC,CAACG,OAAO,CAACC,MAAM,GAAGJ,CAAC,CAACK,MAAM,CAACD,MAAM;EAErE,MAAMG,MAAM,GAAGR,CAAC,CAACM,MAAM,CAACN,CAAC,CAACS,KAAK,CAAC;EAChC,MAAMC,MAAM,GAAGT,CAAC,CAACK,MAAM,CAACL,CAAC,CAACQ,KAAK,CAAC;EAEhC,MAAME,WAAW,GAAGH,MAAM,CAACjB,KAAsB;EACjD,MAAMqB,WAAW,GAAGF,MAAM,CAACnB,KAAsB;;EAEjD;EACA;EACA;EACA;EACA;EACA,IACEY,cAAc,KAAKI,cAAc,IACjCC,MAAM,CAACb,GAAG,KAAKe,MAAM,CAACf,GAAG,IACzBgB,WAAW,KAAKT,SAAS,IACzBU,WAAW,KAAKV,SAAS,IACzBS,WAAW,CAAChB,GAAG,KAAKiB,WAAW,CAACjB,GAAG,EACnC;IACA,OAAO,CAACK,CAAC,EAAEC,CAAC,CAAC;EACf;EAEA,OAAOF,iBAAiB,CAACY,WAAW,EAAEC,WAAW,CAAC;AACpD,CAAC;;AAED;AACA;AACA;AACA,MAAMC,MAAM,GAAIC,EAAuB,IAAK;EAC1C;EACA,IAAIC,QAAQ,GAAG,KAAK;EACpB,IAAIC,KAA8B,GAAG,EAAE;EAEvC,MAAMC,QAAQ,GAAG,YAAY;IAC3B,IAAI;MACF,IAAIF,QAAQ,EAAE;QACZ;QACA;QACAC,KAAK,CAACE,OAAO,CAACD,QAAQ,CAAC;QACvB;MACF;MAEAF,QAAQ,GAAG,IAAI;MAEf,MAAMD,EAAE,EAAE;IACZ,CAAC,SAAS;MACRC,QAAQ,GAAG,KAAK;MAEhB,IAAIC,KAAK,CAACX,MAAM,EAAE;QAChB;QACA,MAAMc,IAAI,GAAGH,KAAK,CAACI,GAAG,EAAE;QAExBD,IAAI,aAAJA,IAAI,uBAAJA,IAAI,EAAI;MACV;IACF;EACF,CAAC;EAED,OAAOF,QAAQ;AACjB,CAAC;AAED,IAAII,eAAyB,GAAG,EAAE;AAMlC,eAAe,SAASC,UAAU,CAChCC,GAA2D,QAS3D;EAAA,IARA;IACEC,WAAW;IACXC,OAAO,GAAG,IAAI;IACdC,MAAM;IACN3C,gBAAgB,GAAGC,uBAAuB;IAC1CH,gBAAgB,GAAGC,uBAAuB;IAC1CH,kBAAkB,GAAGC;EACd,CAAC;EAEVM,KAAK,CAACyC,SAAS,CAAC,MAAM;IACpB,IAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;MACzC,OAAO5B,SAAS;IAClB;IAEA,IAAIsB,WAAW,EAAE;MACf,OAAOtB,SAAS;IAClB;IAEA,IAAIuB,OAAO,KAAK,KAAK,IAAIJ,eAAe,CAAChB,MAAM,EAAE;MAC/C0B,OAAO,CAACC,KAAK,CACX,CACE,6KAA6K,EAC7K,uFAAuF,EACvF,4DAA4D,CAC7D,CACEC,IAAI,CAAC,IAAI,CAAC,CACVC,IAAI,EAAE,CACV;IACH;IAEA,MAAMC,OAAO,GAAGC,MAAM,EAAE;IAExB,IAAIX,OAAO,KAAK,KAAK,EAAE;MACrBJ,eAAe,CAACgB,IAAI,CAACF,OAAO,CAAC;IAC/B;IAEA,OAAO,MAAM;MACX,MAAM1B,KAAK,GAAGY,eAAe,CAACiB,OAAO,CAACH,OAAO,CAAC;MAE9C,IAAI1B,KAAK,GAAG,CAAC,CAAC,EAAE;QACdY,eAAe,CAACkB,MAAM,CAAC9B,KAAK,EAAE,CAAC,CAAC;MAClC;IACF,CAAC;EACH,CAAC,EAAE,CAACgB,OAAO,EAAED,WAAW,CAAC,CAAC;EAE1B,MAAM,CAACpB,OAAO,CAAC,GAAGlB,KAAK,CAACsD,QAAQ,CAACrD,mBAAmB,CAAC;;EAErD;EACA;EACA;EACA,MAAMsD,UAAU,GAAGvD,KAAK,CAACwD,MAAM,CAACjB,OAAO,CAAC;EACxC,MAAMkB,SAAS,GAAGzD,KAAK,CAACwD,MAAM,CAAChB,MAAM,CAAC;EACtC,MAAMkB,mBAAmB,GAAG1D,KAAK,CAACwD,MAAM,CAAC3D,gBAAgB,CAAC;EAC1D,MAAM8D,mBAAmB,GAAG3D,KAAK,CAACwD,MAAM,CAAC7D,gBAAgB,CAAC;EAC1D,MAAMiE,qBAAqB,GAAG5D,KAAK,CAACwD,MAAM,CAAC/D,kBAAkB,CAAC;EAE9DO,KAAK,CAACyC,SAAS,CAAC,MAAM;IACpBc,UAAU,CAACM,OAAO,GAAGtB,OAAO;IAC5BkB,SAAS,CAACI,OAAO,GAAGrB,MAAM;IAC1BkB,mBAAmB,CAACG,OAAO,GAAGhE,gBAAgB;IAC9C8D,mBAAmB,CAACE,OAAO,GAAGlE,gBAAgB;IAC9CiE,qBAAqB,CAACC,OAAO,GAAGpE,kBAAkB;EACpD,CAAC,CAAC;EAEF,MAAMqE,MAAM,GAAG9D,KAAK,CAAC+D,UAAU,CAAC7D,aAAa,CAAC;EAE9C,MAAM8D,eAAe,GAAGhE,KAAK,CAACiE,WAAW,CAAC,MAAM;IAC9C,IAAIC,KAA8B;IAElC,IAAIX,UAAU,CAACM,OAAO,EAAE;MACtB,MAAMM,QAAQ,GACZ,CAAAL,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEK,QAAQ,MACf,OAAOC,MAAM,KAAK,WAAW,GAAGA,MAAM,CAACD,QAAQ,GAAGnD,SAAS,CAAC;MAE/D,MAAMqD,IAAI,GAAGF,QAAQ,GAAGA,QAAQ,CAACG,QAAQ,GAAGH,QAAQ,CAACI,MAAM,GAAGvD,SAAS;MAEvE,IAAIqD,IAAI,EAAE;QACRH,KAAK,GAAGR,mBAAmB,CAACG,OAAO,CAACQ,IAAI,EAAEZ,SAAS,CAACI,OAAO,CAAC;MAC9D;IACF;IAEA,MAAMW,QAAQ,GAAG;MACfC,IAAI,CAACC,WAAsD,EAAE;QAC3D,OAAOC,OAAO,CAACC,OAAO,CAACF,WAAW,GAAGA,WAAW,CAACR,KAAK,CAAC,GAAGA,KAAK,CAAC;MAClE,CAAC;MACDW,KAAK,GAAG;QACN,OAAOL,QAAQ;MACjB;IACF,CAAC;IAED,OAAOA,QAAQ;IACf;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMM,gBAAgB,GAAG9E,KAAK,CAACwD,MAAM,CAAqBxC,SAAS,CAAC;EACpE,MAAM+D,gBAAgB,GAAG/E,KAAK,CAACwD,MAAM,CAA8BxC,SAAS,CAAC;EAC7E,MAAMgE,sBAAsB,GAAGhF,KAAK,CAACwD,MAAM,CAAqBxC,SAAS,CAAC;EAE1EhB,KAAK,CAACyC,SAAS,CAAC,MAAM;IACpBqC,gBAAgB,CAACjB,OAAO,GAAG3C,OAAO,CAACK,KAAK;IAExC,OAAOL,OAAO,CAAC+D,MAAM,CAAC,MAAM;MAC1B,MAAMC,UAAU,GAAG7C,GAAG,CAACwB,OAAO;MAE9B,IAAI,CAACqB,UAAU,IAAI,CAAC3C,OAAO,EAAE;QAC3B;MACF;MAEA,MAAM8B,IAAI,GAAGF,QAAQ,CAACG,QAAQ,GAAGH,QAAQ,CAACI,MAAM;MAChD,MAAMhD,KAAK,GAAGL,OAAO,CAACK,KAAK;MAE3B,MAAM4D,aAAa,GAAGL,gBAAgB,CAACjB,OAAO,IAAI,CAAC;MAEnDiB,gBAAgB,CAACjB,OAAO,GAAGtC,KAAK;MAChCyD,sBAAsB,CAACnB,OAAO,GAAGQ,IAAI;;MAErC;MACA;MACA;MACA,MAAMe,MAAM,GAAGlE,OAAO,CAACmE,GAAG,CAAC9D,KAAK,CAAC;MAEjC,IAAI,CAAA6D,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEf,IAAI,MAAKA,IAAI,IAAIe,MAAM,aAANA,MAAM,eAANA,MAAM,CAAE/E,KAAK,EAAE;QAC1C,MAAMiF,aAAa,GAAGlF,oBAAoB,CACxCgF,MAAM,CAAC/E,KAAK,CACM;QACpB6E,UAAU,CAACK,SAAS,CAACD,aAAa,CAAC;QACnC;MACF;MAEA,MAAMjF,KAAK,GAAGqD,mBAAmB,CAACG,OAAO,CAACQ,IAAI,EAAEZ,SAAS,CAACI,OAAO,CAAC;;MAElE;MACA;MACA,IAAIxD,KAAK,EAAE;QACT;QACA;QACA,MAAMmF,SAAS,GAAGN,UAAU,CAACO,YAAY,EAAE;QAE3C,IAAIpF,KAAK,CAACe,MAAM,CAACsE,IAAI,CAAEC,CAAC,IAAK,EAACH,SAAS,aAATA,SAAS,eAATA,SAAS,CAAEI,UAAU,CAAChF,QAAQ,CAAC+E,CAAC,CAACE,IAAI,CAAC,EAAC,EAAE;UACrEhD,OAAO,CAACiD,IAAI,CACV,0SAA0S,CAC3S;UACD;QACF;QAEA,IAAIvE,KAAK,GAAG4D,aAAa,EAAE;UACzB,MAAMY,MAAM,GAAGnC,qBAAqB,CAACC,OAAO,CAC1CxD,KAAK,EACLoD,SAAS,CAACI,OAAO,CAClB;UAED,IAAIkC,MAAM,KAAK/E,SAAS,EAAE;YACxB,IAAI;cACFkE,UAAU,CAACc,QAAQ,CAACD,MAAM,CAAC;YAC7B,CAAC,CAAC,OAAOE,CAAC,EAAE;cACV;cACA;cACApD,OAAO,CAACiD,IAAI,CACT,qDAAoDzB,IAAK,MACxD,OAAO4B,CAAC,KAAK,QAAQ,IAAIA,CAAC,IAAI,IAAI,IAAI,SAAS,IAAIA,CAAC;cAChD;cACAA,CAAC,CAACC,OAAO,GACTD,CACL,EAAC,CACH;YACH;UACF,CAAC,MAAM;YACLf,UAAU,CAACK,SAAS,CAAClF,KAAK,CAAC;UAC7B;QACF,CAAC,MAAM;UACL6E,UAAU,CAACK,SAAS,CAAClF,KAAK,CAAC;QAC7B;MACF,CAAC,MAAM;QACL;QACA6E,UAAU,CAACK,SAAS,CAAClF,KAAK,CAAC;MAC7B;IACF,CAAC,CAAC;EACJ,CAAC,EAAE,CAACkC,OAAO,EAAErB,OAAO,EAAEmB,GAAG,CAAC,CAAC;EAE3BrC,KAAK,CAACyC,SAAS,CAAC,MAAM;IAAA;IACpB,IAAI,CAACF,OAAO,EAAE;MACZ;IACF;IAEA,MAAM4D,eAAe,GAAG,CACtBC,KAA0C,EAC1C/F,KAAsB,KACX;MACX;MACA;MACA,IAAI+F,KAAK,aAALA,KAAK,eAALA,KAAK,CAAE/B,IAAI,EAAE;QACf,MAAMgC,YAAY,GAAG3C,mBAAmB,CAACG,OAAO,CAC9CuC,KAAK,CAAC/B,IAAI,EACVZ,SAAS,CAACI,OAAO,CAClB;QAED,IAAIwC,YAAY,EAAE;UAChB,MAAMC,YAAY,GAAG9G,gBAAgB,CAAC6G,YAAY,CAAC;UAEnD,IACEC,YAAY,IACZA,YAAY,CAACT,IAAI,KAAKO,KAAK,CAACP,IAAI,IAChC9F,OAAO,CAACuG,YAAY,CAACC,MAAM,EAAEH,KAAK,CAACG,MAAM,CAAC,EAC1C;YACA,OAAOH,KAAK,CAAC/B,IAAI;UACnB;QACF;MACF;MAEA,OAAOV,mBAAmB,CAACE,OAAO,CAACxD,KAAK,EAAEoD,SAAS,CAACI,OAAO,CAAC;IAC9D,CAAC;IAED,IAAIxB,GAAG,CAACwB,OAAO,EAAE;MACf;MACA;MACA,MAAMxD,KAAK,GAAGgC,GAAG,CAACwB,OAAO,CAAC4B,YAAY,EAAE;MAExC,IAAIpF,KAAK,EAAE;QACT,MAAM+F,KAAK,GAAG5G,gBAAgB,CAACa,KAAK,CAAC;QACrC,MAAMgE,IAAI,GAAG8B,eAAe,CAACC,KAAK,EAAE/F,KAAK,CAAC;QAE1C,IAAI0E,gBAAgB,CAAClB,OAAO,KAAK7C,SAAS,EAAE;UAC1C+D,gBAAgB,CAAClB,OAAO,GAAGxD,KAAK;QAClC;QAEAa,OAAO,CAACsF,OAAO,CAAC;UAAEnC,IAAI;UAAEhE;QAAM,CAAC,CAAC;MAClC;IACF;IAEA,MAAMoG,aAAa,GAAG,YAAY;MAChC,MAAMvB,UAAU,GAAG7C,GAAG,CAACwB,OAAO;MAE9B,IAAI,CAACqB,UAAU,IAAI,CAAC3C,OAAO,EAAE;QAC3B;MACF;MAEA,MAAMmE,aAAa,GAAG3B,gBAAgB,CAAClB,OAAO;MAC9C,MAAMxD,KAAK,GAAG6E,UAAU,CAACO,YAAY,EAAE;;MAEvC;MACA,IAAI,CAACpF,KAAK,EAAE;QACV;MACF;MAEA,MAAMsG,WAAW,GAAG3B,sBAAsB,CAACnB,OAAO;MAClD,MAAMuC,KAAK,GAAG5G,gBAAgB,CAACa,KAAK,CAAC;MACrC,MAAMgE,IAAI,GAAG8B,eAAe,CAACC,KAAK,EAAE/F,KAAK,CAAC;MAE1C0E,gBAAgB,CAAClB,OAAO,GAAGxD,KAAK;MAChC2E,sBAAsB,CAACnB,OAAO,GAAG7C,SAAS;;MAE1C;MACA;MACA;MACA;MACA,MAAM,CAAC4F,oBAAoB,EAAEC,YAAY,CAAC,GAAGhG,iBAAiB,CAC5D6F,aAAa,EACbrG,KAAK,CACN;MAED,IACEuG,oBAAoB,IACpBC,YAAY;MACZ;MACA;MACAxC,IAAI,KAAKsC,WAAW,EACpB;QACA,MAAMG,YAAY,GAChB,CAACD,YAAY,CAAC3F,OAAO,GACjB2F,YAAY,CAAC3F,OAAO,CAACC,MAAM,GAC3B0F,YAAY,CAACzF,MAAM,CAACD,MAAM,KAC7ByF,oBAAoB,CAAC1F,OAAO,GACzB0F,oBAAoB,CAAC1F,OAAO,CAACC,MAAM,GACnCyF,oBAAoB,CAACxF,MAAM,CAACD,MAAM,CAAC;QAEzC,IAAI2F,YAAY,GAAG,CAAC,EAAE;UACpB;UACA;UACA5F,OAAO,CAACiC,IAAI,CAAC;YAAEkB,IAAI;YAAEhE;UAAM,CAAC,CAAC;QAC/B,CAAC,MAAM,IAAIyG,YAAY,GAAG,CAAC,EAAE;UAC3B;;UAEA,MAAMC,SAAS,GAAG7F,OAAO,CAAC8F,SAAS,CAAC;YAAE3C;UAAK,CAAC,CAAC;UAC7C,MAAM4C,YAAY,GAAG/F,OAAO,CAACK,KAAK;UAElC,IAAI;YACF,IAAIwF,SAAS,KAAK,CAAC,CAAC,IAAIA,SAAS,GAAGE,YAAY,EAAE;cAChD;cACA,MAAM/F,OAAO,CAACgG,EAAE,CAACH,SAAS,GAAGE,YAAY,CAAC;YAC5C,CAAC,MAAM;cACL;cACA;cACA;cACA,MAAM/F,OAAO,CAACgG,EAAE,CAACJ,YAAY,CAAC;YAChC;;YAEA;YACA5F,OAAO,CAACsF,OAAO,CAAC;cAAEnC,IAAI;cAAEhE;YAAM,CAAC,CAAC;UAClC,CAAC,CAAC,OAAO4F,CAAC,EAAE;YACV;UAAA;QAEJ,CAAC,MAAM;UACL;UACA/E,OAAO,CAACsF,OAAO,CAAC;YAAEnC,IAAI;YAAEhE;UAAM,CAAC,CAAC;QAClC;MACF,CAAC,MAAM;QACL;QACA;QACAa,OAAO,CAACsF,OAAO,CAAC;UAAEnC,IAAI;UAAEhE;QAAM,CAAC,CAAC;MAClC;IACF,CAAC;;IAED;IACA;IACA;IACA,uBAAOgC,GAAG,CAACwB,OAAO,iDAAX,aAAasD,WAAW,CAAC,OAAO,EAAExF,MAAM,CAAC8E,aAAa,CAAC,CAAC;EACjE,CAAC,CAAC;EAEF,OAAO;IACLzC;EACF,CAAC;AACH"}
\ No newline at end of file
